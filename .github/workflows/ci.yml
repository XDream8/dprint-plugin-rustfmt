name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.kind }} ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-16.04
            kind: test_release
          - os: ubuntu-16.04
            kind: test_debug

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      CFG_RELEASE_CHANNEL: nightly

    steps:
    - uses: actions/checkout@v2

    - name: Install toolchain
      run: rustup show # This will install the toolchain from the `rust-toolchain` file

    - name: Extract Rust release version and set CFG_RELEASE env variable
      run: |
        # See https://sed.js.org/?gist=733942438b671befe20b6e7b5dfac57f for an explanation of the regex
        echo "CFG_RELEASE=$(cargo --version | sed -rn 's/cargo\s(.*)\s\(.*\)/\1/p')" >> $GITHUB_ENV

    - name: Cache cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build debug
      if: matrix.config.kind == 'test_debug'
      run: cargo build --verbose
    - name: Build release
      if: matrix.config.kind == 'test_release'
      run: cargo build --target wasm32-unknown-unknown --release --verbose

    - name: Test debug
      if: matrix.config.kind == 'test_debug'
      run: cargo test --verbose
    - name: Test release
      if: matrix.config.kind == 'test_release'
      run: cargo test --release --verbose

    - name: Get tag version
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      id: get_tag_version
      run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

      # GITHUB PUBLISH
    - name: Pre-release
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      run: |
        cd target/wasm32-unknown-unknown/release/
        mv dprint_plugin_rustfmt.wasm rustfmt.wasm
    - name: Release
      uses: softprops/action-gh-release@v1
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          target/wasm32-unknown-unknown/release/rustfmt.wasm
        draft: true

      # PULUGIN PUBLISH
    - name: Checkout plugins repo
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      uses: actions/checkout@v2
      with:
        repository: dprint/plugins
        token: ${{ secrets.CI_REPO_PAT }} # github.token is scoped to current repo, so use this to push to other repo
        path: dprint-plugins
    - name: Plugin publish
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      run: |
          cd dprint-plugins
          node scripts/replace-plugin.js dprint-plugin-rustfmt ${{ steps.get_tag_version.outputs.TAG_VERSION }} rustfmt-${{ steps.get_tag_version.outputs.TAG_VERSION }}
          git add .
          git config user.name "David Sherret"
          git config user.email "dsherret@users.noreply.github.com"
          git commit -m "dprint-plugin-rustfmt ${{ steps.get_tag_version.outputs.TAG_VERSION }}"
          git push origin main